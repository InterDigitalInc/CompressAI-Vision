[build-system]
requires = ["setuptools>=68", "wheel", "pybind11>=2.6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "compressai-vision"
version = "1.1.14.dev0"
description = "Evaluation pipelines for Video Compression for Machine Vision on top of CompressAI"
authors = [
    { name = "CompressAI-Vision team", email = "compressai@interdigital.com" },
]
license = {text = "BSD 3-Clause Clear License"}
readme = "README.md"
urls = { Homepage = "https://github.com/InterDigitalInc/CompressAI-Vision" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

requires-python = ">=3.8,<3.9"

dependencies = [
    "compressai",
    "hydra-core",
    "lap>=0.5.12",
    "motmetrics>=1.4.0",
    "munkres>=1.1.4",
    "numba>=0.58.1",
    "numpy>=1.24.4",
    "omegaconf",
    "opencv-python>=4.12.0.88",
    "pandas",
    "pillow>=9.0,<10.0",
    "pip>=25.0.1",
    "ptflops>=0.7.3",
    "Cython==3.0.8",
    "torch>=2.0.0",
    "torchvision>=0.15.1",
    "wheel>=0.45.1",
    "yuvio",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
]
dev = [
    "black",
    "isort",
    "pytest",
    "pytest-cov",
    "ruff==0.8.6",
]
doc = [
    "fiftyone",
    "ipython",
    "Jinja2<3.1",
    "pytorch_msssim",
    "sphinx",
    "sphinx-book-theme",
    "sphinxcontrib-mermaid",
]
tutorials = [
    "ipywidgets",
    "jupyter",
]
cpu = [
    "torch>=2.0.0",
    "torchvision>=0.15.1",
]
cu118 = [
    "torch>=2.0.0",
    "torchvision>=0.15.1",
]
cu128 = [
    "torch>=2.7.0 ; python_version >= '3.9'",
    "torchvision>=0.22.0 ; python_version >= '3.9'",
]
models-detectron2 = [
]
models-jde = [
]
models-mmpose = [
    "openmim>=0.3.9",
    # mmpose/requirements/runtime.txt
    "chumpy",
    "json_tricks",
    "matplotlib",
    "scipy",
    "xtcocotools>=1.12",
]
models-yolox = [
    "loguru",
    "ninja",
    # "onnx-simplifier==0.4.10",
    # "onnx>=1.13.0",
    "psutil",
    "pycocotools>=2.0.7",
    "tabulate",
    # "tensorboard",
    "thop",
    "tqdm",
]

# NOTE: Temporarily duplicated from [project.optional-dependencies] until
# pip supports installing [dependency-groups].
[dependency-groups]
test = [
    "pytest",
    "pytest-cov",
]
dev = [
    "black",
    "isort",
    "pytest",
    "pytest-cov",
    "ruff==0.8.6",
]
doc = [
    "fiftyone",
    "ipython",
    "Jinja2<3.1",
    "pytorch_msssim",
    "sphinx",
    "sphinx-book-theme",
    "sphinxcontrib-mermaid",
]
tutorials = [
    "ipywidgets",
    "jupyter",
]
models-detectron2 = [
]
models-jde = [
]
models-mmpose = [
    "openmim>=0.3.9",
    # mmpose/requirements/runtime.txt
    "chumpy",
    "json_tricks",
    "matplotlib",
    "scipy",
    "xtcocotools>=1.12",
]
models-yolox = [
    "loguru",
    "ninja",
    # "onnx-simplifier==0.4.10",
    # "onnx>=1.13.0",
    "psutil",
    "pycocotools>=2.0.7",
    "tabulate",
    # "tensorboard",
    "thop",
    "tqdm",
]

[project.scripts]
"compressai-vision-eval" = "compressai_vision.run.eval_split_inference:main"
"compressai-split-inference" = "compressai_vision.run.eval_split_inference:main"
"compressai-remote-inference" = "compressai_vision.run.eval_remote_inference:main"
"compressai-multi-task-inference" = "compressai_vision.run.eval_multitask_inference:main"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
skip_gitignore = true
known_third_party = "PIL,torchvision,torch"

[tool.uv]
conflicts = [
    [
        { extra = "cpu" },
        { extra = "cu118" },
        { extra = "cu128" },
    ],
]
no-build-isolation-package = [
    "chumpy",  # build-system.requires: pip
    "detectron2",  # build-system.requires: Cython, numpy, setuptools
    "mmpose",  # build-system.requires: numpy, torch
    "xtcocotools",  # build-system.requires: Cython, numpy
    "yolox",  # build-system.requires: pycocotools, torch, yolox, ...
]

# Manually specify dependencies for packages without declarative dependency metadata.
[[tool.uv.dependency-metadata]]
name = "chumpy"
version = "0.71"
requires-dist = [
    "scipy",
    "six",
]

[[tool.uv.dependency-metadata]]
name = "detectron2"
version = "0.6"
requires-dist = [
    # From https://github.com/facebookresearch/detectron2/blob/main/setup.py
    "Pillow>=7.1",
    "matplotlib",
    "pycocotools>=2.0.2",
    "termcolor>=1.1",
    "yacs>=0.1.8",
    "tabulate",
    "cloudpickle",
    "tqdm>4.29.0",
    "tensorboard",
    "fvcore>=0.1.5,<0.1.6",
    "iopath>=0.1.7,<0.1.10",
    "future",
    "pydot",
    "dataclasses; python_version<'3.7'",
    "omegaconf>=2.1",
    "hydra-core>=1.1",
    # "black==21.4b2",
]

[[tool.uv.dependency-metadata]]
name = "mmpose"
version = "1.3.2"
requires-dist = [
    # From https://github.com/open-mmlab/mmpose/blob/main/requirements/runtime.txt
    "chumpy",
    "json_tricks",
    "matplotlib",
    "scipy",
    "xtcocotools>=1.12",
]

[[tool.uv.dependency-metadata]]
name = "xtcocotools"
version = "1.14.3"
requires-dist = [
    # From https://github.com/jin-s13/xtcocoapi/blob/master/requirements.txt
    "setuptools>=18.0",
    "Cython>=0.27.3",
    "matplotlib>=2.1.0",
    "numpy>=1.19.5;  python_version == '3.6'",
    "numpy>=1.20.0;  python_version >= '3.7'",
]

[[tool.uv.dependency-metadata]]
name = "yolox"
version = "0.3.0"
requires-dist = [
    # From https://github.com/Megvii-BaseDetection/YOLOX/blob/main/requirements.txt
    "numpy",
    "torch>=1.7",
    "opencv-python",
    "loguru",
    "tqdm",
    "torchvision",
    "thop",
    "ninja",
    "tabulate",
    "psutil",
    "tensorboard",
    "pycocotools>=2.0.2",
    # "onnx>=1.13.0",
    # "onnx-simplifier==0.4.10",
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.uv.sources]
compressai = { workspace = true }
cython-bbox = { path = "scripts/cython_bbox" }
detectron2 = { path = "models/detectron2" }
jde = { path = "models/Towards-Realtime-MOT" }
mmpose = { path = "models/mmpose" }
yolox = { path = "models/yolox" }
torch = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu118", extra = "cu118" },
    { index = "pytorch-cu128", extra = "cu128" },
]
torchvision = [
    { index = "pytorch-cpu", extra = "cpu" },
    { index = "pytorch-cu118", extra = "cu118" },
    { index = "pytorch-cu128", extra = "cu128" },
]

[tool.uv.workspace]
members = [
    "compressai",
    "compressai-vision",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["compressai_vision", "compressai_vision.*"]
