[build-system]
requires = ["setuptools>=68", "wheel", "pybind11>=2.6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "compressai-vision"
version = "1.1.14.dev0"
description = "Evaluation pipelines for Video Compression for Machine Vision on top of CompressAI"
authors = [{ name = "CompressAI-Vision team", email = "compressai@interdigital.com" }]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

requires-python = ">=3.8,<3.9"

dependencies = [
    "compressai",
    "hydra-core",
    "omegaconf",
    "yuvio",
    "pandas",
    "pillow>=9.0,<10.0",
    "ptflops>=0.7.3",
    "pip>=25.0.1",
    "wheel>=0.45.1",
    "numpy>=1.24.4",
    "motmetrics>=1.4.0",
    "numba>=0.58.1",
    "lap>=0.5.12",
    "opencv-python>=4.12.0.88",
    "munkres>=1.1.4",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
dev = ["pytest", "pytest-cov", "black", "isort", "ruff==0.8.6"]
doc = [
    "sphinx",
    "sphinx-book-theme",
    "sphinxcontrib-mermaid",
    "Jinja2<3.1",
    "fiftyone",
    "pytorch_msssim",
    "ipython",
]
tutorials = ["jupyter", "ipywidgets"]

# NOTE: Temporarily duplicated from [project.optional-dependencies] until
# pip supports installing [dependency-groups].
[dependency-groups]
test = ["pytest", "pytest-cov"]
dev = ["pytest", "pytest-cov", "black", "isort", "ruff==0.8.6"]
doc = [
    "sphinx",
    "sphinx-book-theme",
    "sphinxcontrib-mermaid",
    "Jinja2<3.1",
    "fiftyone",
    "pytorch_msssim",
    "ipython",
]
tutorials = ["jupyter", "ipywidgets"]


[project.scripts]
"compressai-vision-eval" = "compressai_vision.run.eval_split_inference:main"
"compressai-split-inference" = "compressai_vision.run.eval_split_inference:main"
"compressai-remote-inference" = "compressai_vision.run.eval_remote_inference:main"
"compressai-multi-task-inference" = "compressai_vision.run.eval_multitask_inference:main"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
skip_gitignore = true
known_third_party = "PIL,torchvision,torch"

[tool.uv.sources]
compressai = { workspace = true }

[tool.uv.workspace]
members = [
    "compressai-vision", "compressai"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["compressai_vision*"]
