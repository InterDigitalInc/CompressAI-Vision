###########################################################################################
# A schematic for the split-inference pipline
#              
#      ┌─────────────────┐                                         ┌─────────────────┐
#      │                 │     ┌───────────┐     ┌───────────┐     │                 │
#      │     NN Task     │     │           │     │           │     │     NN Task     │
# ────►│                 ├────►│  Encoder  ├────►│  Decoder  ├────►│                 ├────►
#      │      Part 1     │     │           │     │           │     │      Part 2     │
#      │                 │     └───────────┘     └───────────┘     │                 │
#      └─────────────────┘                                         └─────────────────┘
#
###########################################################################################

name: 'split-inference'
type: 'video' # If type is video, all feature tensors for the input video are first computed before proceeding encoding process
output_dir: ${paths._runs_root}/${.name}-${.type}/${codec.type}/${codec.encoder_config.qp}

nn_task_part1:
    load_features: True
    dump_features: True
    generate_features_only: False
    feature_dir: ${..output_dir}/${dataset.config.dataset_name}/features
codec:
    encode_only: False
    decode_only: False
nn_task_part2:
    dump_results: False
    output_results_dir: ${..output_dir}/${dataset.config.dataset_name}/output_results
conformance:
    save_conformance_files: False
    subsample_ratio: 9
    conformance_files_path: ${..output_dir}/${dataset.config.dataset_name}/conformance_files/
evaluation:
    bypass: False
    dump: True
    evaluation_dir: ${..output_dir}/${dataset.config.dataset_name}/evaluation
