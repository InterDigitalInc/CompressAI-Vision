###########################################################################################
# A schematic for the split-inference pipline
#
#      ┌─────────────────┐                                         ┌─────────────────┐
#      │                 │     ┌───────────┐     ┌───────────┐     │                 │
#      │     NN Task     │     │           │     │           │     │     NN Task     │
# ────►│                 ├────►│  Encoder  ├────►│  Decoder  ├────►│                 ├────►
#      │      Part 1     │     │           │     │           │     │      Part 2     │
#      │                 │     └───────────┘     └───────────┘     │                 │
#      └─────────────────┘                                         └─────────────────┘
#
###########################################################################################

name: "split-inference"
type: "video" # If type is video, all feature tensors for the input video are first computed before proceeding encoding process
output_dir_root: ${paths._run_root}/${.name}-${.type}
datatype: float32 # or float16 or bfloat16

nn_task_part1:
    load_features: False
    load_features_when_available: False
    dump_features: False
    generate_features_only: False
    feature_dir: "${..output_dir_root}/features/${dataset.datacatalog}/${dataset.config.dataset_name}"
codec:
    encode_only: False
    decode_only: False
    # following variables fetched from codec cfg, needed for decode_only pipeline
    codec_output_dir: "${codec.output_dir}/codec_output"
    bitstream_name: "${codec.bitstream_name}"
    skip_n_frames: 0 # This is encoder only option
    n_frames_to_be_encoded: -1  #(-1 = encode all input), This is encoder only option
    measure_complexity: "${codec.mac_computation}"
nn_task_part2:
    dump_results: False
    output_results_dir: "${codec.output_dir}/output_results"
conformance:
    save_conformance_files: False
    subsample_ratio: 9
    conformance_files_path: "${codec.output_dir}/conformance_files/"
evaluation:
    bypass: False
    dump: True
    evaluation_dir: "${codec.output_dir}/evaluation"
