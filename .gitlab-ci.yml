variables:
  UV_INSTALL_DIR: "${CI_PROJECT_DIR}/.local/bin"
  UV_CACHE_DIR: "${CI_PROJECT_DIR}/.uv-cache"
  UV_LINK_MODE: copy

stages:
  - setup
  - static-analysis
  - doc

.default-before-script: &default-before-script
  - git submodule update --init --recursive
  - export PATH="${UV_INSTALL_DIR}:$PATH"
  - source "${UV_INSTALL_DIR}/env"
  - uv run --no-sync python --version

uv-install:
  image: python:3.8-buster
  stage: setup
  script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - *default-before-script
  artifacts:
    paths:
      - ".local/"
    expire_in: 1 day
  tags:
    - docker
ruff-lint:
  stage: static-analysis
  image: python:3.8-buster
  before_script:
    - *default-before-script
    - uv sync --only-group=dev
  script:
    - uv run --no-sync make check-ruff-lint
  tags:
    - docker

ruff-format:
  stage: static-analysis
  image: python:3.8-buster
  before_script:
    - *default-before-script
    - uv sync --only-group=dev
  script:
    - uv run --no-sync make check-ruff-format
  tags:
    - docker

ruff-organize-imports:
  stage: static-analysis
  image: python:3.8-buster
  before_script:
    - *default-before-script
    - uv sync --only-group=dev
  script:
    - uv run --no-sync make check-ruff-organize-imports
  tags:
    - docker

doc:
  stage: doc
  image: python:3.8-buster
  before_script:
    - *default-before-script
    - uv sync --group=doc
    - cd docs
  script:
    - uv run --no-sync make html
  tags:
    - docker
